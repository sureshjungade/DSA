class Solution {
    public int left(int[] nums, int target){
                int n = nums.length;

        int i =0;
        int j = n;

        while(i<j){
            int mid = i + (j-i)/2;
            if(nums[mid]<target){
                i = mid+1;
            }else{
                j = mid;
            }
        }
        return i;
    }
    public int maximumCount(int[] nums) {
        
        int n = nums.length;
	
	T.C.O(N)
        // for(int i=0; i<n; i++){
        //     if(nums[i]==0){
        //         continue;
        //     }else if(nums[i]<0){
        //         neg++;
        //     }else{
        //         pos++;
        //     }
        // }
        int pos =n - left(nums,1);
        int neg = left(nums,0);

        return Math.max(pos,neg);
    }
}