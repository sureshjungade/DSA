class Solution {
    public String[] sortPeople(String[] names, int[] heights) {
        
        for(int i=0; i<heights.length-1; i++){
            
            for(int j=i+1; j<heights.length; j++){
                if(heights[i]<heights[j]){
                    swap(heights,i,j);
                    swap1(names,i,j);
                }
            }
        }
        return names;
    }

    public void swap(int[] arr,int i,int j){
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    public void swap1(String[] arr,int i,int j){
        String temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}

//above like bubble sort


//optimzed solution : used hashmap to store height and name then sort the height array and store names by getting name 
			map.get(height[i]).

class Solution {
    public String[] sortPeople(String[] names, int[] heights) {
        int length = heights.length;
        Map<Integer,String> map = new HashMap<>();

         for(int i=0; i<length; i++){
             map.put(heights[i],names[i]);
         }
        Arrays.sort(heights);

        int ind = 0;
        
        for(int i=length-1; i>=0; i--){
           names[ind++] = map.get(heights[i]);
        }

        return names;
    }

    
}
